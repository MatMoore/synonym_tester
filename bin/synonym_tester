#!/usr/bin/env ruby

PROJECT_ROOT = File.dirname(__FILE__) + "/../"
DATA_DIR = PROJECT_ROOT + "data/"
LIBRARY_PATH = PROJECT_ROOT + "lib/"

[PROJECT_ROOT, LIBRARY_PATH].each do |path|
  $LOAD_PATH.unshift(path) unless $LOAD_PATH.include?(path)
end

require "synonym_tester"
require 'elasticsearch'
require 'optparse'

queries = []
OptionParser.new do |parser|
  parser.on("-q", "--query QUERY",
            "Search query") do |query|
    queries << query
  end
end.parse!

if queries.empty?
  queries = ["expired driving licence", "self assessment", "universal credit claim"]
end

index_synonyms = []
search_synonyms = []

ARGV.each do |rule|
  type, synonym_rule = rule.split(':')
  case type.downcase
  when 'both'
    index_synonyms << synonym_rule
    search_synonyms << synonym_rule
  when 'index'
    index_synonyms << synonym_rule
  when /^(search|query)$/
    search_synonyms << synonym_rule
  else
    raise ValueError(rule)
  end
end

es_client = Elasticsearch::Client.new(
    hosts: ENV['ELASTICSEARCH_HOSTS'] || 'http://localhost:9200',
    transport_options: { headers: { "Content-Type" => "application/json" } }
  )

doc_ids = File.readlines(DATA_DIR + "doc_ids.txt").map(&:strip)

SynonymTester.new(es_client).run(
  queries: queries,
  doc_ids: doc_ids,
  search_synonyms: search_synonyms,
  index_synonyms: index_synonyms
)
